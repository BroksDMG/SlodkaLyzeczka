'use client'
import { ReactNode } from 'react';
import { ThemeProvider } from 'styled-components';
import GlobalStyle from '../styles/GlobalStyles';
import theme from '../styles/theme';
import Footer from '../components/Footer';
import styled,{keyframes} from 'styled-components';
import React from 'react';
import Head from 'next/head';
import { useState,useEffect } from 'react';
const Body = styled.body`
  display: flex;
  min-height: 100vh;
  width:100%;
  flex-direction: column;
  justify-content: flex-start;
  position:relative;
`
const GlobalLoader=styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #ffffff; /* Dopasuj do swojego tÅ‚a */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
`

const spin=()=>keyframes`
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
`
const Spinner =styled.div`
  border: 4px solid #f3f3f3;
  border-top: 4px solid #3498db;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: ${spin} 1s linear infinite;
`

const RootLayout = ({ children }: { children: ReactNode }) => {
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const handleComplete = () => setLoading(false);

    handleComplete(); // Ustaw na false po pierwszym renderze
    return () => {}; // Opcjonalne czyszczenie
  }, []);
  return (
    <html lang="en">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Body>
        {loading?
          <GlobalLoader>
            <Spinner/>
          </GlobalLoader>:
          <ThemeProvider theme={theme}>
            <GlobalStyle />

            {children}
            <Footer />
          </ThemeProvider>
        }
      </Body>
    </html>
  );
};

export default RootLayout;
